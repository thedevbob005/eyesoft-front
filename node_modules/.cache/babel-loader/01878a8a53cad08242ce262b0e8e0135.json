{"remainingRequest":"C:\\Projects\\eyesoft-front\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Projects\\eyesoft-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\eyesoft-front\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Projects\\eyesoft-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projects\\eyesoft-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\eyesoft-front\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\eyesoft-front\\src\\App.vue","mtime":1556095679166},{"path":"C:\\Projects\\eyesoft-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\eyesoft-front\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\eyesoft-front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Projects\\eyesoft-front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Projects\\eyesoft-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\eyesoft-front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _parseInt from \"C:\\\\Projects\\\\eyesoft-front\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'App',\n  data: function data() {\n    return {\n      valid: false,\n      drawer: null,\n      uname: '',\n      upass: '',\n      items: [{\n        icon: 'mdi-desktop-mac-dashboard',\n        text: 'Dashboard',\n        permission: _parseInt(this.$store.state.permissions.per_all)\n      }, {\n        divider: true,\n        permission: _parseInt(this.$store.state.permissions.per_users)\n      }, {\n        heading: 'User',\n        permission: _parseInt(this.$store.state.permissions.per_users)\n      }, {\n        icon: 'mdi-plus',\n        text: 'Add User',\n        to: 'createuser',\n        permission: _parseInt(this.$store.state.permissions.per_users)\n      }, {\n        icon: 'mdi-account-details',\n        text: 'List Users',\n        to: 'listuser',\n        permission: _parseInt(this.$store.state.permissions.per_users)\n      }, {\n        icon: 'mdi-account-key',\n        text: 'Manage Permission',\n        to: 'managepermissions',\n        permission: _parseInt(this.$store.state.permissions.per_users)\n      }, {\n        divider: true,\n        permission: _parseInt(this.$store.state.permissions.per_accounts) || _parseInt(this.$store.state.permissions.per_billing)\n      }, {\n        heading: 'Accounts',\n        permission: _parseInt(this.$store.state.permissions.per_accounts) || _parseInt(this.$store.state.permissions.per_billing)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Journal',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Ledger',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Accounts Receivable',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Accounts Payable',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Sales Order',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Purchase Order',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-finance',\n        text: 'Inventory Management',\n        permission: _parseInt(this.$store.state.permissions.per_accounts)\n      }, {\n        icon: 'mdi-receipt',\n        text: 'Billing / Invoice',\n        permission: _parseInt(this.$store.state.permissions.per_billing)\n      }, {\n        divider: true,\n        permission: _parseInt(this.$store.state.permissions.per_clients)\n      }, {\n        heading: 'Client',\n        permission: _parseInt(this.$store.state.permissions.per_clients)\n      }, {\n        icon: 'mdi-account-group',\n        text: 'Profiles',\n        permission: _parseInt(this.$store.state.permissions.per_clients)\n      }, {\n        icon: 'mdi-archive',\n        text: 'Orders',\n        permission: _parseInt(this.$store.state.permissions.per_clients)\n      }, {\n        icon: 'mdi-history',\n        text: 'History',\n        permission: _parseInt(this.$store.state.permissions.per_clients)\n      }, {\n        divider: true,\n        permission: _parseInt(this.$store.state.permissions.per_lab)\n      }, {\n        heading: 'LAB',\n        permission: _parseInt(this.$store.state.permissions.per_lab)\n      }, {\n        icon: 'mdi-microscope',\n        text: 'Jobs',\n        permission: _parseInt(this.$store.state.permissions.per_lab)\n      }, {\n        divider: true,\n        permission: 1\n      }, {\n        icon: 'mdi-settings-outline',\n        text: 'Settings',\n        permission: _parseInt(this.$store.state.permissions.per_all)\n      }]\n    };\n  },\n  methods: {\n    login: function login() {\n      this.axios({\n        url: 'login',\n        method: 'post',\n        data: {\n          uname: this.uname,\n          upass: this.upass\n        }\n      }).then(function (response) {\n        if (response.data.success) {\n          this.$store.commit('login', {\n            login: true,\n            key: response.data.user.key,\n            name: response.data.user.name,\n            rank: response.data.user.rank,\n            dp: response.data.user.dp,\n            permissions: response.data.permissions\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app id=\"hbaui\">\n    <v-navigation-drawer v-if=\"this.$store.state.isLoggedIn\" v-model=\"drawer\" fixed clipped app>\n      <v-list dense>\n        <v-layout row align-center>\n          <v-flex xs12 align-center justify-center layout text-xs-center pt-5 pb-5>\n            <v-avatar color=\"grey lighten-4\" size=\"128\">\n              <img :src=\"this.$store.state.loginDP\" alt=\"avatar\">\n            </v-avatar>\n          </v-flex>\n        </v-layout>\n        <template v-for=\"(item, i) in items\">\n          <v-layout v-if=\"item.heading\" :key=\"i\" row align-center>\n            <v-flex xs12>\n              <v-subheader v-if=\"item.heading && item.permission\">\n                {{ item.heading }}\n              </v-subheader>\n            </v-flex>\n          </v-layout>\n          <v-divider v-else-if=\"item.divider && item.permission\" :key=\"i\" class=\"my-3\"></v-divider>\n          <v-list-tile v-else-if=\"item.permission\" :key=\"i\" :to=\"item.to\">\n            <v-list-tile-action>\n              <v-icon>{{ item.icon }}</v-icon>\n            </v-list-tile-action>\n            <v-list-tile-content>\n              <v-list-tile-title>\n                {{ item.text }}\n              </v-list-tile-title>\n            </v-list-tile-content>\n          </v-list-tile>\n        </template>\n        <v-list-tile @click=\"this.$store.commit('logout')\">\n          <v-list-tile-action>\n            <v-icon>mdi-power</v-icon>\n          </v-list-tile-action>\n          <v-list-tile-content>\n            <v-list-tile-title>\n              Logout\n            </v-list-tile-title>\n          </v-list-tile-content>\n        </v-list-tile>\n      </v-list>\n    </v-navigation-drawer>\n    <v-toolbar v-if=\"this.$store.state.isLoggedIn\" app absolute clipped-left class=\"elevation-0\">\n      <v-toolbar-side-icon @click=\"drawer = !drawer\" class=\"mr-3\"></v-toolbar-side-icon>\n      <v-img :src=\"require('../src/assets/logo.png')\" contain :max-width=\"48\" lazy-src></v-img>\n      <span class=\"title ml-3 mr-5\">Eye<span class=\"font-weight-light\">Soft</span></span>\n      <v-spacer></v-spacer>\n    </v-toolbar>\n    <v-content v-if=\"this.$store.state.isLoggedIn\">\n      <router-view/>\n    </v-content>\n    <v-content v-else>\n      <v-container fill-height>\n        <v-layout align-center justify-center>\n          <v-flex xs12 sm6 md4 lg3 xl2>\n            <v-img :src=\"require('../src/assets/logo.png')\" contain :max-height=\"120\" lazy-src></v-img>\n            <div class=\"title text-xs-center mb-5\">Eye<span class=\"font-weight-light\">Soft</span></div>\n            <v-form ref=\"loginForm\" v-model=\"valid\" lazy-validation class=\"text-xs-center\" @submit.prevent=\"login\">\n              <v-text-field prepend-icon=\"mdi-account-outline\" name=\"login\" label=\"Login\" type=\"text\" v-model=\"uname\"></v-text-field>\n              <v-text-field prepend-icon=\"mdi-lock-outline\" name=\"password\" label=\"Password\" type=\"password\" v-model=\"upass\"></v-text-field>\n              <v-btn color=\"primary\" outline>Login</v-btn>\n            </v-form>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data () {\n    return {\n      valid: false,\n      drawer: null,\n      uname: '',\n      upass: '',\n      items: [\n        { icon: 'mdi-desktop-mac-dashboard', text: 'Dashboard', permission: parseInt(this.$store.state.permissions.per_all) },\n        { divider: true, permission: parseInt(this.$store.state.permissions.per_users) },\n        { heading: 'User', permission: parseInt(this.$store.state.permissions.per_users) },\n        { icon: 'mdi-plus', text: 'Add User', to: 'createuser', permission: parseInt(this.$store.state.permissions.per_users) },\n        { icon: 'mdi-account-details', text: 'List Users', to: 'listuser', permission: parseInt(this.$store.state.permissions.per_users) },\n        { icon: 'mdi-account-key', text: 'Manage Permission', to: 'managepermissions', permission: parseInt(this.$store.state.permissions.per_users) },\n        { divider: true, permission: parseInt(this.$store.state.permissions.per_accounts) || parseInt(this.$store.state.permissions.per_billing) },\n        { heading: 'Accounts', permission: parseInt(this.$store.state.permissions.per_accounts) || parseInt(this.$store.state.permissions.per_billing) },\n        { icon: 'mdi-finance', text: 'Journal', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-finance', text: 'Ledger', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-finance', text: 'Accounts Receivable', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-finance', text: 'Accounts Payable', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-finance', text: 'Sales Order', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-finance', text: 'Purchase Order', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-finance', text: 'Inventory Management', permission: parseInt(this.$store.state.permissions.per_accounts) },\n        { icon: 'mdi-receipt', text: 'Billing / Invoice', permission: parseInt(this.$store.state.permissions.per_billing) },\n        { divider: true, permission: parseInt(this.$store.state.permissions.per_clients) },\n        { heading: 'Client', permission: parseInt(this.$store.state.permissions.per_clients) },\n        { icon: 'mdi-account-group', text: 'Profiles', permission: parseInt(this.$store.state.permissions.per_clients) },\n        { icon: 'mdi-archive', text: 'Orders', permission: parseInt(this.$store.state.permissions.per_clients) },\n        { icon: 'mdi-history', text: 'History', permission: parseInt(this.$store.state.permissions.per_clients) },\n        { divider: true, permission: parseInt(this.$store.state.permissions.per_lab) },\n        { heading: 'LAB', permission: parseInt(this.$store.state.permissions.per_lab) },\n        { icon: 'mdi-microscope', text: 'Jobs', permission: parseInt(this.$store.state.permissions.per_lab) },\n        { divider: true, permission: 1 },\n        { icon: 'mdi-settings-outline', text: 'Settings', permission: parseInt(this.$store.state.permissions.per_all) }\n      ]\n    }\n  },\n  methods: {\n    login: function () {\n      this.axios({\n        url: 'login',\n        method: 'post',\n        data: {\n          uname: this.uname,\n          upass: this.upass\n        }\n      }).then(function (response) {\n        if(response.data.success) {\n          this.$store.commit('login', {\n            login: true,\n            key: response.data.user.key,\n            name: response.data.user.name,\n            rank: response.data.user.rank,\n            dp: response.data.user.dp,\n            permissions: response.data.permissions\n          })\n        }\n\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src"}]}